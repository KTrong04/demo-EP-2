version: "3.9"

services:
  # MongoDB database
  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - microservices-net

  # RabbitMQ message broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"      # AMQP port
      - "15672:15672"    # Management UI
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - microservices-net

  # Auth service
  auth:
    build: ./auth
    ports:
      - "3000:3000"
    env_file:
      - ./auth/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    networks:
      - microservices-net

  # Product service
  product:
    build: ./product
    ports:
      - "3001:3001"
    env_file:
      - ./product/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    networks:
      - microservices-net

  # Order service
  order:
    build: ./order
    ports:
      - "3002:3002"
    env_file:
      - ./order/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    networks:
      - microservices-net

  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "3003:3003"
    depends_on:
      auth:
        condition: service_started
      product:
        condition: service_started
      order:
        condition: service_started
    networks:
      - microservices-net

# Shared network
networks:
  microservices-net:
    driver: bridge

# Persistent storage for Mongo
volumes:
  mongo-data:
